version: '3.4'

name: MicroRestaurant

services:

  rabbitmq:
    container_name: rabbitmq  
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  portainer:
    container_name: portainer
    restart: always
    image: portainer/portainer-ce
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  pgadmin:
    container_name: pgadmin
    restart: always
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin


  #mongoclient:
  #    container_name: mongoclient
  #    image: mongoclient/mongoclient:latest
  #    hostname: mongoclient
  #    depends_on:
  #      - catalog.db
  #    ports:
  #      - 3300:3000

  catalog.db:
    container_name: catalog.db
    restart: always
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  catalog.api:
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    ports:
      - "8000:80"
    depends_on:
        - catalog.db
    build:
      context: .
      dockerfile: src/Catalog/Catalog.Api/Dockerfile

  basket.db:
    container_name: basket.db
    restart: always
    image: redis:alpine
    ports:
      - 6379:6379
  basket.api:
    container_name: basket.api
    image: ${DOCKER_REGISTRY-}basketapi
    ports:
      - "8001:80"
    depends_on:
      - basket.db
      - rabbitmq
    build:
      context: .
      dockerfile: src/Basket/Basket.Api/Dockerfile

  discount.db:
    container_name: discount.db
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  discount.api:
    container_name: discount.api
    image: ${DOCKER_REGISTRY-}discountapi
    ports:
      - "8002:80"
    depends_on:
      - discount.db
    build:
      context: .
      dockerfile: src/Discount/Discount.Api/Dockerfile
  discount.grpc:
    container_name: discount.grpc
    image: ${DOCKER_REGISTRY-}discountgrpc
    ports:
      - "8003:80"
    depends_on:
      - discount.db
    build:
      context: .
      dockerfile: src/Discount/Discount.Grpc/Dockerfile

  order.db:
    container_name: order.db
    restart: always
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
        - "1433:1433"
  order.api:
    container_name: order.api
    image: ${DOCKER_REGISTRY-}orderapi
    ports:
      - "8004:80"
    depends_on:
      - order.db
      - rabbitmq
    build:
      context: .
      dockerfile: src/Order/Order.Api/Dockerfile

  ocelot.apigateway:
    container_name: ocelot.apigateway
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: src/ApiGateways/Ocelot.ApiGateway/Dockerfile
    ports:
      - "8010:80"
    depends_on:
        - catalog.api
        - basket.api
        - discount.api
        - order.api

volumes:

  portainer_data:
  pgadmin_data:
  mongo_data:
  postgres_data:

